class DataSourcesController < ApplicationController

  before_action :set_data_source, only: [:show, :edit, :update, :export, :destroy]

  def index
    if params[:project_id].nil?
      @data_sources = DataSource.all.paginate(page: params[:page], per_page: 20)
    else
      @project = Project.find(params[:project_id])
      @data_sources = @project.data_sources.paginate(page: params[:page], per_page: 20)
    end
  end

  def new
    @data_source = DataSource.new do |t|
      t.project_id = params[:project_id]
    end
  end

  def edit
  end

  def Show
  end

  def export
    respond_to do |format|
      format.xml { send_data render_to_string('export'), filename: "#{@data_source.name}.xml", type: 'application/xml', disposition: 'attachment' }
    end
  end


  def create
    @project = Project.find(params[:data_source][:project_id])

    @data_source = @project.data_sources.new(data_source_params) do |t|
      if params[:data_source][:data]
        t.data      = params[:data_source][:data].read
        t.filename  = params[:data_source][:data].original_filename
        t.mime_type = params[:data_source][:data].content_type
      end
    end

    respond_to do |format|
      if @data_source.save
        DataSource.check_format(@data_source)
        format.html { redirect_to project_data_sources_path(@data_source.project_id), notice: 'Data source was successfully created.' }
        format.json { render :show, status: :created, location: @data_source }
      else
        format.html { render :new }
        format.json { render json: @data_source.errors, status: :unprocessable_entity }
      end
    end
  end

  def update
    respond_to do |format|
      if @data_source.update(data_source_params)
        format.html { redirect_to project_data_sources_path(@data_source.project_id), notice: 'Data source was successfully updated.' }
        format.json { render :show, status: :ok, location: @data_source }
      else
        format.html { render :edit }
        format.json { render json: @data_source.errors, status: :unprocessable_entity }
      end
    end
  end

  def destroy
    @data_source.destroy
    respond_to do |format|
      format.html { redirect_to project_data_sources_path(@data_source.project_id), notice: 'Data source was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_data_source
      @data_source = DataSource.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def data_source_params
      params.fetch(:data_source, {}).permit(:name, :data, :project_id)
    end
end
